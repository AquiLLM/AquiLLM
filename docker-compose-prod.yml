
services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${PORT:-8080}:${PORT:-8080}"
    env_file:
      - aquillm/.env
    environment:
      - PORT=${PORT:-8080}
      - POSTGRES_HOST=db
      - STORAGE_HOST=storage:9000
      - STORAGE_ACCESS_KEY=dev
      - STORAGE_SECRET_KEY=rickbailey
    depends_on:
      db:
        condition: service_healthy
      createbuckets:
        condition: service_completed_successfully

    volumes:
      - .:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT:-8080}/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  db:
    image: pgvector/pgvector:0.8.0-pg17
    env_file:
      - aquillm/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  storage:
    image: minio/minio
    env_file:
      - aquillm/.env
    environment:
      - MINIO_ROOT_USER=dev
      - MINIO_ROOT_PASSWORD=rickbailey
      - MINIO_DEFAULT_BUCKETS=aquillm
    volumes:
      - minio_data:/data
    healthcheck:
      test: ['CMD', 'curl', '-f', '-I', 'localhost:9000/minio/health/live']
      interval: 5s
      timeout: 10s
      start_period: 60s
    command: minio server /data --console-address ":9001"

  createbuckets:
    image: minio/mc
    depends_on:
      storage:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set aquillm http://storage:9000 dev rickbailey;
      /usr/bin/mc mb aquillm/aquillm;
      exit 0;"

volumes:
  postgres_data:
  minio_data:
